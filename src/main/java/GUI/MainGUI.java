/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import BL.TravelGuideBL;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import org.jdom2.Document;
import org.xml.sax.SAXException;

/**
 *
 * @author Patrick
 */
public class MainGUI extends javax.swing.JFrame {

    TravelGuideBL tgbl = new TravelGuideBL();
    private Document doc;
    
    /** Creates new form NewJFrame */
    public MainGUI() {
        initComponents();
        try {
            tgbl.loadData();
        } catch (Exception ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        cbInit();
        this.addWindowListener(new WindowAdapter() {
            
            public void windowClosing(WindowEvent evt) {
                
                doc = tgbl.createDocument("LocData");
                tgbl.prepareXML(doc);
                try {
                    tgbl.writeXML(doc);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Failed to save");
                }
            }
        });
    }
    
    public void cbInit() {
        if(tgbl.getLocdata().size() > 0)
        {
            for (int i = 0; i < tgbl.getLocdata().size(); i++) {
                cbLocation.addItem(tgbl.getLocdata().get(i).city);
            }  
            cbLocation.setSelectedIndex(0);
            cbLocation.updateUI();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbLocation = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        pnFirstTwoDays = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnOtherDays = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miAdd = new javax.swing.JMenuItem();
        miRemove = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(480, 300));

        cbLocation.setModel(new javax.swing.DefaultComboBoxModel<>());
        cbLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLocationActionPerformed(evt);
            }
        });
        getContentPane().add(cbLocation, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.GridLayout(2, 0));

        pnFirstTwoDays.setLayout(new java.awt.GridLayout(1, 2));
        pnFirstTwoDays.add(jLabel1);

        jLabel2.setText("jLabel2");
        pnFirstTwoDays.add(jLabel2);

        jPanel1.add(pnFirstTwoDays);

        pnOtherDays.setLayout(new java.awt.GridLayout(1, 3));

        jLabel3.setText("jLabel3");
        pnOtherDays.add(jLabel3);

        jLabel4.setText("jLabel4");
        pnOtherDays.add(jLabel4);

        jLabel5.setText("jLabel5");
        pnOtherDays.add(jLabel5);

        jPanel1.add(pnOtherDays);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        miAdd.setText("Add");
        miAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAddActionPerformed(evt);
            }
        });
        jMenu1.add(miAdd);

        miRemove.setText("Remove");
        miRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRemoveActionPerformed(evt);
            }
        });
        jMenu1.add(miRemove);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRemoveActionPerformed
        try{
           int index = cbLocation.getSelectedIndex();
           tgbl.remove(index);
           cbLocation.removeItemAt(index);
           cbLocation.updateUI();
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Nothing to remove!");
        }
        
    }//GEN-LAST:event_miRemoveActionPerformed

    private void miAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAddActionPerformed
        LocationDialog ldia = new LocationDialog(this, true);
        ldia.setVisible(true);
        if (ldia.isAddOK()) {
            tgbl.addLocation(ldia.getLd());
            cbLocation.addItem(ldia.getLd().getCity());
            cbLocation.updateUI();
        }
    }//GEN-LAST:event_miAddActionPerformed

    private void cbLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLocationActionPerformed
        TravelGuideBL bl =tgbl.getWeatherData(cbLocation.getSelectedIndex());
        System.out.println(String.valueOf(bl.getList().get(0).getWeather().get(0).getDescription()));
        try {
            //jLabel1.setText(String.valueOf("Today:"+bl.getList().get(0).getWeather().get(0).getDescription()+ " "+ (bl.getList().get(0).getMain().getTemp() - 273.15)+" "));
            jLabel1.setText("<html><body>TODAY<br>"+bl.getList().get(0).getWeather().get(0).getDescription()+"<br>"+String.valueOf(bl.getList().get(0).getMain().getTemp() - 273.15).substring(0, 3)+" °C <br>"+String.valueOf(bl.getList().get(0).getMain().getTemp_min() - 273.15).substring(0, 4)+"° / "+ String.valueOf(bl.getList().get(0).getMain().getTemp_max() - 273.15).substring(0, 4)+"°</body></html>");
            jLabel1.setIcon(new ImageIcon(ImageIO.read(new URL("http://openweathermap.org/img/wn/"+bl.getList().get(0).getWeather().get(0).getIcon()+".png"))));
            jLabel2.setText("<html><body>TOMORROW<br>"+bl.getList().get(1).getWeather().get(0).getDescription()+"<br>"+String.valueOf(bl.getList().get(1).getMain().getTemp() - 273.15).substring(0, 3)+" °C<br>"+String.valueOf(bl.getList().get(1).getMain().getTemp_min() - 273.15).substring(0, 4)+"° / "+ String.valueOf(bl.getList().get(1).getMain().getTemp_max() - 273.15).substring(0, 4)+ "°</body></html>");
            jLabel2.setIcon(new ImageIcon(ImageIO.read(new URL("http://openweathermap.org/img/wn/"+bl.getList().get(1).getWeather().get(0).getIcon()+".png"))));
            jLabel3.setText("<html><body>"+bl.getList().get(2).getDt_txt().replace('-', '.').substring(0, 10)+"<br>"+bl.getList().get(2).getWeather().get(0).getDescription()+"<br>"+String.valueOf(bl.getList().get(2).getMain().getTemp_min() - 273.15).substring(0, 4)+"° / "+ String.valueOf(bl.getList().get(2).getMain().getTemp_max() - 273.15).substring(0, 4)+" ° C</body></html>");
            jLabel3.setIcon(new ImageIcon(ImageIO.read(new URL("http://openweathermap.org/img/wn/"+bl.getList().get(2).getWeather().get(0).getIcon()+".png"))));
            jLabel4.setText("<html><body>"+bl.getList().get(3).getDt_txt().replace('-', '.').substring(0, 10)+"<br>"+bl.getList().get(3).getWeather().get(0).getDescription()+"<br>"+String.valueOf(bl.getList().get(3).getMain().getTemp_min() - 273.15).substring(0, 4)+"° / "+ String.valueOf(bl.getList().get(3).getMain().getTemp_max() - 273.15).substring(0, 4)+" °C</body></html>");
            jLabel4.setIcon(new ImageIcon(ImageIO.read(new URL("http://openweathermap.org/img/wn/"+bl.getList().get(3).getWeather().get(0).getIcon()+".png"))));
            jLabel5.setText("<html><body>"+bl.getList().get(4).getDt_txt().replace('-', '.').substring(0, 10)+"<br>"+bl.getList().get(4).getWeather().get(0).getDescription()+"<br>"+String.valueOf(bl.getList().get(4).getMain().getTemp_min() - 273.15).substring(0, 4)+"° / "+ String.valueOf(bl.getList().get(4).getMain().getTemp_max() - 273.15).substring(0, 4)+" °C</body></html>");
            jLabel5.setIcon(new ImageIcon(ImageIO.read(new URL("http://openweathermap.org/img/wn/"+bl.getList().get(4).getWeather().get(0).getIcon()+".png"))));
            
        } catch (MalformedURLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_cbLocationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbLocation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem miAdd;
    private javax.swing.JMenuItem miRemove;
    private javax.swing.JPanel pnFirstTwoDays;
    private javax.swing.JPanel pnOtherDays;
    // End of variables declaration//GEN-END:variables

}
